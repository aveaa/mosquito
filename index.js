// –ö–æ–¥ –ø–∏—Å–∞–ª http://relapse.pw
console.log(`–ó–∞–≥—Ä—É–∑–∫–∞..`);
const Discord = require('discord.js')
const bot = new Discord.Client()
const botconfig = require("./botconfig.json");
const ms = require("ms");
const fs = require("fs");

//bot.login(process.env.BOT_TOKEN);
bot.login(botconfig.token);

function clean(text) {
    if (typeof (text) === "string")
        return text.replace(/`/g, "`" + String.fromCharCode(8203)).replace(/@/g, "@" + String.fromCharCode(8203));
    else
        return text;
}

let prefix = botconfig.prefix;
let roleJoin = "‚õî –ù–µ–Ω–∞–¥—ë–∂–Ω—ã–π";

let statuses = [`discord.gg/restlbro | ${prefix}help`, `—Ä–æ–ª–∏–∫–∏ –†–µ—Å—Ç–ª–∞ | ${prefix}help`];
let types = [0, 1, 2, 3];

bot.on("ready", () => {
    setInterval(function () {

        let status = statuses[Math.floor(Math.random() * statuses.length)];
        let type = types[Math.floor(Math.random() * types.length)];

        if (type == 0) {
            bot.user.setPresence({
                game: {
                    name: `–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ - ${prefix}help`,
                    status: 'Online',
                    type: type
                }
            })
        }

        if (type == 1) {
            bot.user.setPresence({
                game: {
                    url: 'https://www.twitch.tv/restlgamer',
                    name: `–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ - ${prefix}help`,
                    status: 'Online',
                    type: type
                }
            })
        }

        if (type == 2) {
            bot.user.setPresence({
                game: {
                    name: `–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ - ${prefix}help`,
                    status: 'Online',
                    type: type
                }
            })
        }

        if (type == 3) {
            bot.user.setPresence({
                game: {
                    name: `–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ - ${prefix}help`,
                    status: 'Online',
                    type: type
                }
            })
        }
    }, 10000)

    console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:");
    console.log(" ");
    console.log(`Discord –¢—ç–≥: ${bot.user.tag}`);
    console.log(`Discord ID: ${bot.user.id}`);
    console.log(`Prefix: ${botconfig.prefix}`)
    console.log(``);
    console.log(`–ö–æ–¥ –ø–∏—Å–∞–ª http://relapse.pw`);
    //console.log(`–î–æ–ø–æ–ª–Ω–∏–ª –∫–æ–¥ http://vladciphersky.xyz | –≥–¥–µ –µ—Å—Ç—å "SQD<name>"`);
});

bot.on("guildMemberAdd", member => {
    let welcomeChannel = member.guild.channels.find('name', 'üëãwelcome')
    let welcomeEmbed = new Discord.RichEmbed()
        .setAuthor(bot.user.username, bot.user.displayAvatarURL)
        .setThumbnail(member.displayAvatarURL)
        .setDescription(`–ü—Ä–∏–≤–µ—Ç, <@${member.id}>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä :wink: !`)
        .setColor(Math.floor(Math.random() * 16777214) + 1)
        .addField("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ", member.guild.memberCount, true)

    welcomeChannel.send(`–ü—Ä–∏–≤–µ—Ç <@${member.id}>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä :wink: !`);

    let joinRole = member.guild.roles.find('name', roleJoin)

    member.addRole(joinRole);
});

bot.on('guildMemberRemove', member => {
    let welcomeChannel = member.guild.channels.find('name', 'üëãwelcome');
    welcomeChannel.send(`**${member.user.username}** –ø–æ–∫–∏–Ω—É–ª –Ω–∞—Å.(`);
});

bot.on('raw', event => {
    if (event.t === 'MESSAGE_REACTION_ADD') {
        let channel = bot.channels.get(event.d.channel_id);
        let message = channel.fetchMessage(event.d.message_id)
            .then(msg => {
                let user = msg.guild.members.get(event.d.user_id);

                if (msg.author.id == '456226577798135808') {
                    if (user.id != bot.user.id) {
                        var roleObj = msg.guild.roles.find('name', roleJoin);
                        var memberObj = msg.guild.members.get(user.id);

                        if (event.t === "MESSAGE_REACTION_ADD") {
                            memberObj.removeRole(roleObj);
                        }
                    }
                }
            })
    }
})

bot.on("message", (message) => {
    let sender = message.author;
    let version = `${message.author.tag}`;
    let msg = message.content.toLowerCase();
    let messageArray = msg.split(' ');
    let cmd = messageArray[0];
    let args = messageArray.slice(1);
    let bIcon = bot.user.displayAvatarURL;
    let sIcon = sender.displayAvatarURL;
    let embedColor = Math.floor(Math.random() * 16777214) + 1;
    let logChannel = message.guild.channels.find('name', "log");

    if (message.guild.id != "262587335151976448" || message.guild.id != "418357514099359744") {
        if (cmd.startsWith(prefix + "info")) {
            if (cmd === prefix + "info") {
                let iUser = message.guild.member(message.mentions.users.first());
                if (!iUser) {
                    message.delete().catch(O_o => { });
                    let userCreated = sender.createdAt.toString().split(' ');
                    let finalString = new Discord.RichEmbed()
                        .setAuthor(name = bot.user.username, icon_url = bIcon)
                        .setThumbnail(sender.displayAvatarURL)
                        .setDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ <@" + sender.id + ">")
                        .setColor(embedColor)
                        .addField("–ù–∏–∫: ", sender.username, true)
                        .addField("–î–∏—Å–∫–æ—Ä–¥ —Ç—ç–≥", `${sender.tag}`, true)
                        .addField("ID: ", sender.id, true)
                        .addField("–ê–∫–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω: ", userCreated[2] + ' ' + userCreated[1] + ", " + userCreated[3], true)
                        .setFooter(version, sender.displayAvatarURL)
                    return message.channel.send(finalString);
                }
                if (iUser.id == sender.id) {
                    message.delete().catch(O_o => { });
                    let userCreated = sender.createdAt.toString().split(' ');
                    let finalString = new Discord.RichEmbed()
                        .setAuthor(name = bot.user.username, icon_url = bIcon)
                        .setThumbnail(sender.displayAvatarURL)
                        .setDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ <@" + sender.id + ">")
                        .setColor(embedColor)
                        .addField("–ù–∏–∫: ", sender.username, true)
                        .addField("–î–∏—Å–∫–æ—Ä–¥ —Ç—ç–≥", `${sender.tag}`, true)
                        .addField("ID: ", sender.id, true)
                        .addField("–ê–∫–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω: ", userCreated[2] + ' ' + userCreated[1] + ", " + userCreated[3], true)
                        .setFooter(version, sender.displayAvatarURL)
                    return message.channel.send(finalString);
                }
                message.delete().catch(O_o => { });
                let userCreated = iUser.user.createdAt.toString().split(' ');
                let finalString = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setThumbnail(iUser.user.displayAvatarURL)
                    .setDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ <@" + iUser.id + ">")
                    .setColor(embedColor)
                    .addField("–ù–∏–∫: ", `<@${iUser.id}>`, true)
                    .addField("–î–∏—Å–∫–æ—Ä–¥ —Ç—ç–≥", `${iUser.user.tag}`, true)
                    .addField("ID: ", iUser.id, true)
                    .addField("–ê–∫–∫–∞—É–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω: ", userCreated[2] + ' ' + userCreated[1] + ", " + userCreated[3], true)
                    .setFooter(version, sender.displayAvatarURL)
                return message.channel.send(finalString)
                    .catch(error => {
                        let infoError = new Discord.RichEmbed()
                            .setAuthor(name = bot.user.username, icon_url = bIcon)
                            .setColor(embedColor)
                            .setDescription("–û—à–∏–±–∫–∞")
                            .addField("–ü—Ä–∏—á–∏–Ω–∞", error)
                            .setFooter(version, sender.displayAvatarURL)
                        message.channel.send(infoError);
                    })
            }
        }

        var serverCreated = message.guild.createdAt.toString().split(' ');
        var serverCreatedAt = serverCreated[2] + ' ' + serverCreated[1] + ", " + serverCreated[3];

        var serverJoined = message.guild.joinedAt.toString().split(' ');
        var serverJoinedAt = serverJoined[2] + ' ' + serverJoined[1] + ", " + serverJoined[3];

        if (cmd === prefix + "serverinfo") {
            let sicon = message.guild.iconURL;
            let serverembed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ: ")
                .setColor(embedColor)
                .setThumbnail(sicon)
                .addField("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ ", message.guild.name, true)
                .addField("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ ", serverCreatedAt, true)
                .addField("–ë–æ—Ç –≤–æ—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä ", serverJoinedAt, true)
                .addField("–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ ", message.guild.memberCount, true)
                .addField("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ—Ç–æ–≤ ", '5', true)
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            return message.channel.send(serverembed);
        }

        if (cmd === prefix + "help") {
            let bIcon = bot.user.displayAvatarURL;
            let helpEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription("–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: ")
                .setColor(embedColor)
                .setThumbnail(bIcon)
                .addField(`${prefix}info [–Ω–∏–∫]`, `–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ**`)
                .addField(`${prefix}botInfo`, `–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ **–±–æ—Ç–µ**`)
                .addField(`${prefix}serverInfo `, `–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ **—Å–µ—Ä–≤–µ—Ä–µ**`)
                .addField(`${prefix}ahelp `, `–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è **–∞–¥–º–∏–Ω–æ–≤**`)
                .addField(`${prefix}report [–Ω–∏–∫] [–ø—Ä–∏—á–∏–Ω–∞] `, `–ö–∏–Ω—É—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**`)
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            return message.channel.send(helpEmbed);
        }

        if (cmd === prefix + "ahelp") {
            let bIcon = bot.user.displayAvatarURL;
            let helpEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription("–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤: ")
                .setColor(embedColor)
                .setThumbnail(bIcon)
                .addField(`${prefix}kick [–Ω–∏–∫] [–ø—Ä–∏—á–∏–Ω–∞]`, `–í—ã–≥–Ω–∞—Ç—å **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** —Å **—Å–µ—Ä–≤–µ—Ä–∞**`)
                .addField(`${prefix}clear [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] `, `–û—á–∏—Å—Ç–∏—Ç—å –∫–∞–Ω–∞–ª –æ—Ç [–∫–æ–ª–∏—á–µ—Å—Ç–≤–∞] —Å–æ–æ–±—â–µ–Ω–∏–π`)
                .addField(`${prefix}mute [–Ω–∏–∫] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞] `, `–ó–∞—Ç–∫–Ω—É—Ç—å **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**`)
                .addField(`${prefix}unmute [–Ω–∏–∫] `, `–†–∞–∑–º—É—Ç–∏—Ç—å **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**`)
                .addField(`${prefix}ban [–Ω–∏–∫] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞] `, `–ó–∞–±–∞–Ω–∏—Ç—å **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ`)
                .addField(`${prefix}unban [–Ω–∏–∫] `, `–†–∞–∑–±–∞–Ω–∏—Ç—å **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ`)
                .addField(`${prefix}giverole [–Ω–∏–∫] [—Ä–æ–ª—å] `, `–í—ã–¥–∞—Ç—å **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é** –ø—Ä–∞–≤–∞ –¥–ª—è –∞–¥–º–∏–Ω [–∫–æ–º–∞–Ω–¥—ã]`)
                .addField(`${prefix}giveroles [–Ω–∏–∫] `, `–í—ã–¥–∞—Ç—å **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é** –ø—Ä–∞–≤–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥ clear –∏ mute`)
                .addField(`${prefix}removeroles [–Ω–∏–∫] `, `–û—Ç–æ–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ —É **–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** –Ω–∞ –≤—Å–µ –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã`)
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            return message.channel.send(helpEmbed);
        }

        if (cmd === prefix + "botinfo") {
            var botCreated = bot.user.createdAt.toString().split(' ');
            var botCreatedAt = botCreated[2] + ' ' + botCreated[1] + ", " + botCreated[3];

            let botEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ: ")
                .setColor(embedColor)
                .setThumbnail(bIcon)
                .addField("–ù–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞", bot.user.username, true)
                .addField("–°–æ–∑–¥–∞–Ω ", "6 —Å–µ–Ω—Ç—è–±—Ä—è, 2018", true)
                .addField("–°–æ–∑–¥–∞–ª ", "<@301218562146566146>", true)
                .addField('–í–µ—Ä—Å–∏—è', botconfig.version)
                .setFooter("–°–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ –†–µ—Å—Ç–ª–∞", 'https://pp.userapi.com/c639920/v639920330/3c7f3/kHINbf8sxZk.jpg?ava=1')

            message.delete().catch(O_o => { });
            return message.channel.send(botEmbed);
        }
    }

    if (cmd === prefix + "giverole") {
        let gUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        let gSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}giverole`)
            .addField("–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", `${prefix}giverole [–Ω–∏–∫] [—Ä–æ–ª—å]`)
            .setColor(embedColor)
            .setFooter(version, sender.displayAvatarURL)
        if (message.member.roles.some(r => ["–ê–¥–º–∏–Ω"].includes(r.name))) {

            let gRole = args.join(' ').slice(22);

            if (gUser.roles.find("name", `${gRole}`)) {
                let gNotMatchEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription(`–£ ${gUser} —É–∂–µ –∏–º–µ–µ—Ç—Å—è –¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å`)
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                message.channel.send(gNotMatchEmbed);
                return;
            }

            if (!gRole) {
                let gNoRoleEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription("**–í—ã** –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ä–æ–ª—å")
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                message.channel.send(gNoRoleEmbed);
                return message.channel.send(gSpellingEmbed);
            }

            async function functionGiveRole() {
                gUser.addRole(message.guild.roles.find("name", `${gRole}`).id)

                    .catch(error => {
                        let gCantGiveRoleEmbed = new Discord.RichEmbed()
                            .setAuthor(name = bot.user.username, icon_url = bIcon)
                            .setDescription("–û—à–∏–±–∫–∞")
                            .addField("–ü—Ä–∏—á–∏–Ω–∞", error)
                            .setColor(embedColor)
                            .setFooter(version, sender.displayAvatarURL)

                        return message.channel.send(gCantGiveRoleEmbed);
                    })
            }

            functionGiveRole();

            let gModLog = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å')
                .setColor(embedColor)
                .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ', gUser, true)
                .addField('–í—ã–¥–∞–ª ', "<@" + message.author.id + ">", true)
                .addField("–†–æ–ª—å ", gRole, true)
                .setFooter(version, sender.displayAvatarURL)
            let gChannelLog = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${gUser} –≤—ã–¥–∞–Ω—ã –ø—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã ${gRole}`)
                .setColor(embedColor)
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            logChannel.send(gModLog)
            message.channel.send(gChannelLog).catch(console.error);
        } else {
            let gNoPermsEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–£ **–≤–∞—Å** –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
                .setColor(embedColor)

            message.channel.send(gNoPermsEmbed);

            message.delete().catch(O_o => { });

            return;
        }
    }

    if (cmd === prefix + "giveroles") {
        let gRolesUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        let gRolesSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}giveroles`)
            .addField("–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", `${prefix}giveroles [–Ω–∏–∫]`)
            .setColor(embedColor)
            .setFooter(version, sender.displayAvatarURL)
        if (message.member.roles.some(r => ["–ê–¥–º–∏–Ω"].includes(r.name))) {

            if (gRolesUser.roles.find("name", `mute`) && gRolesUser.roles.find("name", `clear`)) {
                let gRolesNotMatchEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription(`–£ ${gRolesUser} —É–∂–µ –∏–º–µ—é—Ç—Å—è –æ–±–µ —Ä–æ–ª–∏`)
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                message.channel.send(gRolesNotMatchEmbed);
                return;
            }

            async function functionGiveRoles() {
                gRolesUser.addRole(message.guild.roles.find("name", `mute`).id)
                gRolesUser.addRole(message.guild.roles.find("name", `clear`).id)

                    .catch(error => {
                        let gCantGiveRoleEmbed = new Discord.RichEmbed()
                            .setAuthor(name = bot.user.username, icon_url = bIcon)
                            .setDescription("–û—à–∏–±–∫–∞")
                            .addField("–ü—Ä–∏—á–∏–Ω–∞", error)
                            .setColor(embedColor)
                            .setFooter(version, sender.displayAvatarURL)

                        return message.channel.send(gCantGiveRoleEmbed);
                    })
            }

            functionGiveRoles();

            let gRolesModLog = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–í—ã–¥–∞–Ω—ã –ø—Ä–∞–≤–∞')
                .setColor(embedColor)
                .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ', gRolesUser, true)
                .addField('–í—ã–¥–∞–ª ', "<@" + message.author.id + ">", true)
                .addField("–ö–æ–º–∞–Ω–¥—ã ", "mute, clear", true)
                .setFooter(version, sender.displayAvatarURL)
            let gRolesChannelLog = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${gRolesUser} –≤—ã–¥–∞–Ω—ã –ø—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ mute, clear`)
                .setColor(embedColor)
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            logChannel.send(gRolesModLog)
            message.channel.send(gRolesChannelLog).catch(console.error);
        } else {
            let gRolesNoPermsEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–£ **–≤–∞—Å** –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
                .setColor(embedColor)

            message.channel.send(gRolesNoPermsEmbed);

            message.delete().catch(O_o => { });

            return;
        }
    }

    if (cmd === prefix + "removeroles") {
        let rRolesUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        let rRolesSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}removeroles`)
            .addField("–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", `${prefix}removeroles [–Ω–∏–∫]`)
            .setColor(embedColor)
            .setFooter(version, sender.displayAvatarURL)
        if (message.member.roles.some(r => ["–ê–¥–º–∏–Ω"].includes(r.name))) {

            if (!rRolesUser.roles.find("name", `mute`) && !rRolesUser.roles.find("name", `clear`) && !rRolesUser.roles.find("name", `kick`) && !rRolesUser.roles.find("name", `ban`)) {
                let rRolesNotMatchEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription(`–£ ${rRolesUser} –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥–∞–º`)
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                message.channel.send(rRolesNotMatchEmbed);
                return;
            }

            async function functionRemoveRoles() {
                rRolesUser.removeRole(message.guild.roles.find("name", `mute`).id)
                rRolesUser.removeRole(message.guild.roles.find("name", `clear`).id)
                rRolesUser.removeRole(message.guild.roles.find("name", `kick`).id)
                rRolesUser.removeRole(message.guild.roles.find("name", `ban`).id)

                    .catch(error => {
                        let rCantRemoveRolesEmbed = new Discord.RichEmbed()
                            .setAuthor(name = bot.user.username, icon_url = bIcon)
                            .setDescription("–û—à–∏–±–∫–∞")
                            .addField("–ü—Ä–∏—á–∏–Ω–∞", error)
                            .setColor(embedColor)
                            .setFooter(version, sender.displayAvatarURL)

                        return message.channel.send(rCantRemoveRolesEmbed);
                    })
            }

            functionRemoveRoles();

            let rRolesModLog = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–û—Ç–æ–±—Ä–∞–Ω—ã –ø—Ä–∞–≤–∞')
                .setColor(embedColor)
                .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ', rRolesUser, true)
                .addField('–û—Ç–æ–±—Ä–∞–ª ', "<@" + message.author.id + ">", true)
                .addField("–ö–æ–º–∞–Ω–¥—ã ", "mute, clear, kick, ban", true)
                .setFooter(version, sender.displayAvatarURL)
            let rRolesChannelLog = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription(`–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${rRolesUser} –æ—Ç–æ–±—Ä–∞–Ω –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥–∞–º`)
                .setColor(embedColor)
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            logChannel.send(rRolesModLog)
            message.channel.send(rRolesChannelLog).catch(console.error);
        } else {
            let rRolesNoPermsEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–£ **–≤–∞—Å** –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
                .setColor(embedColor)

            message.channel.send(rRolesNoPermsEmbed);

            message.delete().catch(O_o => { });

            return;
        }
    }

    if (cmd.startsWith(prefix + "clear")) {
        let clearSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setColor(embedColor)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}clear`)
            .addField(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã ${prefix}clear`, `${prefix}clear [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`)
            .setFooter(version, sender.displayAvatarURL)

        let clearSize = args.join(' ').slice(22);

        async function clear() {
            message.delete();

            if (!message.member.roles.find("name", "üëë –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")) {
                let clearNoRoleEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setColor(embedColor)
                    .setDescription(`–£ **–≤–∞—Å** –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–µ ${prefix}clear`)
                    .setFooter(version, sender.displayAvatarURL)

                message.channel.send(clearNoRoleEmbed);
                return;
            }

            if (isNaN(args[0])) {
                let clearNoNumEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setColor(embedColor)
                    .setDescription("–ù–µ —É–∫–∞–∑–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π")
                    .setFooter(version, sender.displayAvatarURL)
                message.channel.send(clearNoNumEmbed);
                return message.channel.send(clearSpellingEmbed);
            }

            const fetched = await message.channel.fetchMessages({ limit: args[0] });
            console.log('–ù–∞–π–¥–µ–Ω–æ ' + fetched.size + ' —Å–æ–æ–±—â–µ–Ω–∏–π, —É–¥–∞–ª–µ–Ω–∏–µ...')

            let clearDeletedMsgEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setColor(embedColor)
                .setDescription(`–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ ${fetched.size} —Å–æ–æ–±—â–µ–Ω–∏–π`)
                .setFooter(version, sender.displayAvatarURL)

            message.channel.bulkDelete(fetched)
                .catch(error => {
                    let clearError = new Discord.RichEmbed()
                        .setAuthor(name = bot.user.username, icon_url = bIcon)
                        .setColor(embedColor)
                        .setDescription("–û—à–∏–±–∫–∞")
                        .addField("–ü—Ä–∏—á–∏–Ω–∞", error)
                        .setFooter(version, sender.displayAvatarURL)
                    message.channel.send(clearError);
                })
        }

        clear();
    }

    if (cmd === prefix + "mute") {
        let toMute = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        let toMuteSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setColor(embedColor)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}mute`)
            .addField(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã`, `${prefix}mute [–Ω–∏–∫] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞]`)
            .addField(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏`, `–°–µ–∫—É–Ω–¥–∞: [–≤—Ä–µ–º—è]s \n–ú–∏–Ω—É—Ç–∞: [–≤—Ä–µ–º—è]m \n–ß–∞—Å: [–≤—Ä–µ–º—è]h \n–î–µ–Ω—å: [–≤—Ä–µ–º—è]d`)
            .setFooter(version, sender.displayAvatarURL)

        if (!toMute) {
            let toMuteNotFindUser = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setColor(embedColor)
                .setDescription("**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å** –Ω–µ –Ω–∞–π–¥–µ–Ω")
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            return message.channel.send(toMuteNotFindUser);
        }

        if (toMute.hasPermission("ADMINISTRATOR")) {
            let toMuteCantMute = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setColor(embedColor)
                .setDescription(`–Ø –Ω–µ –º–æ–≥—É –∑–∞—Ç–∫–Ω—É—Ç—å **–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é**`)
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            return message.channel.send(toMuteCantMute);
        }
        let muterole = message.guild.roles.find(`name`, "Muted");

        if (!muterole) {
            async function functionMuteOne() {
                try {
                    muterole = await message.guild.createRole({
                        name: "Muted",
                        color: "#000000",
                        permissions: []
                    })
                    message.guild.channels.forEach(async (channel, id) => {
                        await channel.overwritePermissions(muterole, {
                            SEND_MESSAGES: false,
                            ADD_REACTIONS: false,
                            CONNECT: false
                        })
                    })
                } catch (e) {
                    console.lot(e.stack)
                }
            }
            functionMuteOne();
        }

        let muteParameters = args.join(' ').slice(22);
        let muteTime = args[1];
        if (!message.member.roles.find("name", "üëë –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")) {
            let muteNoPerms = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setColor(embedColor)
                .setDescription("–£ **–≤–∞—Å** –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã")
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            return message.channel.send(muteNoPerms);
        }

        if (!muteTime) {
            let muteNoTimeEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setColor(embedColor)
                .setDescription("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤—Ä–µ–º—è")
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            message.channel.send(muteNoTimeEmbed);
            return message.channel.send(toMuteSpellingEmbed);
        }

        let muteReason = muteParameters.slice(muteTime.length);
        if (!muteReason) {
            let muteNoReasonEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription("<@" + sender.id + ">, –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏—á–∏–Ω—É")
                .setColor(embedColor)
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            message.channel.send(muteNoReasonEmbed);
            return message.channel.send(toMuteSpellingEmbed);
        }

        let muteModLog = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription('–ú—É—Ç')
            .setColor(embedColor)
            .addField('–ù–∞—Ä—É—à–∏—Ç–µ–ª—å ', toMute, true)
            .addField('–ó–∞—Ç–∫–Ω—É–ª ', "<@" + message.author.id + ">", true)
            .addField('–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ', `${muteTime}`, true)
            .addField('–ü—Ä–∏—á–∏–Ω–∞ ', `${muteReason}`, true)
            .setFooter(version, sender.displayAvatarURL)
        message.delete().catch(O_o => { });

        async function functionMuteTwo() {
            await (toMute.addRole(muterole.id));
            message.channel.send(muteModLog);
            logChannel.send(muteModLog);
        }

        functionMuteTwo();

        setTimeout(function () {
            toMute.removeRole(muterole.id);
            let muteMuted = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription(`<@${toMute.id}> –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω`)
                .setColor(embedColor)
                .setFooter(version, sender.displayAvatarURL)

            logChannel.send(muteMuted);
        }, ms(muteTime));
    }

    if (cmd === prefix + "unmute") {
        let toUnMute = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        let UnMuteSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setColor(embedColor)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}unmute`)
            .addField(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã`, `${prefix}unmute [–Ω–∏–∫]`)
            .setFooter(version, sender.displayAvatarURL)

        if (!toUnMute) {
            let unMuteNotFindUser = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setColor(embedColor)
                .setDescription("**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å** –Ω–µ –Ω–∞–π–¥–µ–Ω")
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            return message.channel.send(unMuteNotFindUser);
        }

        if (!message.member.roles.find("name", "mute")) {
            let unMuteCant = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setColor(embedColor)
                .setDescription(`–£ **–≤–∞—Å** –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã`)
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            return message.channel.send(unMuteCant);
        }

        if (!toUnMute.roles.find("name", "Muted")) {
            let unMuteNoRole = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setColor(embedColor)
                .setDescription(`**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å** –Ω–µ –∑–∞–º—É—á–µ–Ω`)
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            return message.channel.send(unMuteNoRole);
        }

        let unMuteRole = message.guild.roles.find(`name`, "Muted");

        let unMuteModLog = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω')
            .setColor(embedColor)
            .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ', toUnMute, true)
            .addField('–†–∞–∑–º—É—Ç–∏–ª ', "<@" + message.author.id + ">", true)
            .setFooter(version, sender.displayAvatarURL)
        message.delete().catch(O_o => { });

        let unMuted = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription(`<@${toUnMute.id}> –±—ã–ª —Ä–∞–∑–º—É—á–µ–Ω`)
            .setColor(embedColor)
            .setFooter(version, sender.displayAvatarURL)

        async function functionUnMuteTwo() {
            await (toUnMute.removeRole(unMuteRole.id));
            message.channel.send(unMuted);
            logChannel.send(unMuteModLog);
        }
        functionUnMuteTwo();
    }

    if (cmd === prefix + "kick") {
        let kUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        let kSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}kick`)
            .addField("–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", `${prefix}kick [–Ω–∏–∫] [–ø—Ä–∏—á–∏–Ω–∞]`)
            .setColor(embedColor)
            .setFooter(version, sender.displayAvatarURL)
        if (message.member.roles.some(r => ["üëë –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"].includes(r.name))) {
            if (!kUser) {
                let kNotMatchEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription("<@" + sender.id + ">, –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                message.channel.send(kNotMatchEmbed);
                return message.channel.send(kSpellingEmbed);
            }

            if (!kUser.kickable) {
                let kNotKickableEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription("<@" + sender.id + ">, —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–ª—å–∑—è –≤—ã–≥–Ω–∞—Ç—å")
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                return message.channel.send(kNotKickableEmbed);
            }

            let kReason = args.join(' ').slice(22);
            if (!kReason) {
                let kNokReasonEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription("<@" + sender.id + ">, –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏—á–∏–Ω—É")
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                message.channel.send(kNokReasonEmbed);
                return message.channel.send(kSpellingEmbed);
            }
            kUser.kick(kReason)

                .catch(error => {
                    let kCantKickEmbed = new Discord.RichEmbed()
                        .setAuthor(name = bot.user.username, icon_url = bIcon)
                        .setDescription("–Ø –Ω–µ –º–æ–≥—É –≤—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                        .addField("–ü—Ä–∏—á–∏–Ω–∞", error)
                        .setColor(embedColor)
                        .setFooter(version, sender.displayAvatarURL)

                    message.channel.send({ kCantKickEmbed });
                })

            let kModLog = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–ö–∏–∫')
                .setColor(embedColor)
                .addField('–ù–∞—Ä—É—à–∏—Ç–µ–ª—å ', kUser, true)
                .addField('–í—ã–≥–Ω–∞–ª ', "<@" + message.author.id + ">", true)
                .addField("–ü—Ä–∏—á–∏–Ω–∞ ", kReason, true)
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            logChannel.send(kModLog)
            message.channel.send(kModLog).catch(console.error);
        } else {
            let kNoPermsEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–£ **–≤–∞—Å** –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
                .setColor(embedColor)

            message.channel.send(kNoPermsEmbed);

            message.delete().catch(O_o => { });

            return;
        }
    }

    if (cmd === prefix + "ban") {
        let bUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));

        let bSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}ban`)
            .addField("–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", `${prefix}ban [–Ω–∏–∫] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞]`)
            .addField(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏`, `–°–µ–∫—É–Ω–¥–∞: [–≤—Ä–µ–º—è]s \n–ú–∏–Ω—É—Ç–∞: [–≤—Ä–µ–º—è]m \n–ß–∞—Å: [–≤—Ä–µ–º—è]h \n–î–µ–Ω—å: [–≤—Ä–µ–º—è]d`)
            .setColor(embedColor)
            .setFooter(version, sender.displayAvatarURL)

        if (message.member.roles.some(r => ["üëë –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"].includes(r.name))) {
            if (!bUser) {
                let bNotMatchEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription("<@" + sender.id + ">, –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                message.channel.send(bNotMatchEmbed);
                return message.channel.send(bSpellingEmbed);
            }

            if (!bUser.kickable) {
                let bNotKickableEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription("<@" + sender.id + ">, —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–ª—å–∑—è –∑–∞–±–∞–Ω–∏—Ç—å")
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                return message.channel.send(bNotKickableEmbed);
            }

            let banParameters = args.join(' ').slice(22);
            let banTime = args[1];
            if (!banTime) {
                let banNoTimeEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setColor(embedColor)
                    .setDescription("–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤—Ä–µ–º—è")
                    .setFooter(version, sender.displayAvatarURL)
                message.delete().catch(O_o => { });
                message.channel.send(banNoTimeEmbed);
                return message.channel.send(bSpellingEmbed);
            }

            let bReason = banParameters.slice(banTime.length);
            if (!bReason) {
                let bNoReasonEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription("<@" + sender.id + ">, –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏—á–∏–Ω—É")
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                message.channel.send(bNoReasonEmbed);
                return message.channel.send(bSpellingEmbed);
            }
            message.guild.member(bUser).ban(bReason)

                .catch(error => {
                    let bCantBanEmbed = new Discord.RichEmbed()
                        .setAuthor(name = bot.user.username, icon_url = bIcon)
                        .setDescription("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å")
                        .addField("–ü—Ä–∏—á–∏–Ω–∞", error)
                        .setColor(embedColor)
                        .setFooter(version, sender.displayAvatarURL)

                    message.channel.send({ bCantBanEmbed });
                })

            let bModLog = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–ë–∞–Ω')
                .setColor(embedColor)
                .addField('–ù–∞—Ä—É—à–∏—Ç–µ–ª—å ', bUser, true)
                .addField('–ó–∞–±–∞–Ω–∏–ª ', "<@" + message.author.id + ">", true)
                .addField("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ", `${banTime}`, true)
                .addField("–ü—Ä–∏—á–∏–Ω–∞ ", `${bReason}`, true)
                .setFooter(version, sender.displayAvatarURL)
            message.delete().catch(O_o => { });
            logChannel.send(bModLog);
            message.channel.send(bModLog).catch(console.error);

            setTimeout(function () {
                message.guild.unban(bUser);
                let bUnBan = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription(`<@${bUser.id}> –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω`)
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                logChannel.send(bUnBan);
            }, ms(banTime));

        } else {
            let bNoPermsEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–£ **–≤–∞—Å** –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
                .setColor(embedColor)

            message.channel.send(bNoPermsEmbed);

            message.delete().catch(O_o => { });

            return;

        }
    }

    if (cmd === prefix + "unban") {
        let uBUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));

        let uBSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}unban`)
            .addField("–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", `${prefix}unban [–Ω–∏–∫]`)
            .setColor(embedColor)
            .setFooter(version, sender.displayAvatarURL)

        if (message.member.roles.some(r => ["üëë –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"].includes(r.name))) {
            if (!uBUser) {
                let uBNotMatchEmbed = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription("<@" + sender.id + ">, –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                message.delete().catch(O_o => { });
                message.channel.send(uBNotMatchEmbed);
                return message.channel.send(uBSpellingEmbed);
            }

            setTimeout(function () {
                message.guild.unban(uBUser)
                    .catch(error => {
                        let uBCantBanEmbed = new Discord.RichEmbed()
                            .setAuthor(name = bot.user.username, icon_url = bIcon)
                            .setDescription("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞–∑–±–∞–Ω–∏—Ç—å")
                            .addField("–ü—Ä–∏—á–∏–Ω–∞", error)
                            .setColor(embedColor)
                            .setFooter(version, sender.displayAvatarURL)

                        message.channel.send({ uBCantBanEmbed });
                        return;
                    });
                let uBChannelLog = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription(`**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å** ${uBUser} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω`)
                    .setColor(embedColor)
                    .setFooter(version, sender.displayAvatarURL)

                let uBModLog = new Discord.RichEmbed()
                    .setAuthor(name = bot.user.username, icon_url = bIcon)
                    .setDescription('–†–∞–∑–±–∞–Ω')
                    .setColor(embedColor)
                    .addField('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ', uBUser, true)
                    .addField('–†–∞–∑–±–∞–Ω–∏–ª ', "<@" + message.author.id + ">", true)
                    .setFooter(version, sender.displayAvatarURL)
                message.delete().catch(O_o => { });
                logChannel.send(uBModLog);
                message.channel.send(uBChannelLog).catch(console.error);
            }, ms("1s"));

        } else {
            let uBNoPermsEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription('–£ **–≤–∞—Å** –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã')
                .setColor(embedColor)

            message.channel.send(uBNoPermsEmbed);

            message.delete().catch(O_o => { });

            return;

        }
    }

    if (cmd === prefix + "report") {
        let rUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));
        let rSpellingEmbed = new Discord.RichEmbed()
            .setAuthor(name = bot.user.username, icon_url = bIcon)
            .setDescription(`–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ ${prefix}report`)
            .addField("–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", `${prefix}report [–Ω–∏–∫] [–ø—Ä–∏—á–∏–Ω–∞]`)
            .setColor(embedColor)
            .setFooter(version, sender.displayAvatarURL)


        if (!rUser) {
            let userNotFoundEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                .setColor(embedColor)
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            message.channel.send(userNotFoundEmbed);
            return message.channel.send(rSpellingEmbed);
        }

        if (rUser.id == bot.user.id) {
            let rCantReportBot = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription("–ù–µ–ª—å–∑—è –∫–∏–Ω—É—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –±–æ—Ç–∞")
                .setColor(embedColor)
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            return message.channel.send(rCantReportBot);
        }

        if (rUser.id == sender.id) {
            let rCantReportUrSelf = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription("–ù–µ–ª—å–∑—è –∫–∏–Ω—É—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ —Å–µ–±—è")
                .setColor(embedColor)
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            return message.channel.send(rCantReportUrSelf);
        }

        let rReason = args.join(' ').slice(22);
        if (!rReason) {
            let rNoReasonEmbed = new Discord.RichEmbed()
                .setAuthor(name = bot.user.username, icon_url = bIcon)
                .setDescription("<@" + sender.id + ">, –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏—á–∏–Ω—É")
                .setColor(embedColor)
                .setFooter(version, sender.displayAvatarURL)

            message.delete().catch(O_o => { });
            message.channel.send(rNoReasonEmbed);
            return message.channel.send(rSpellingEmbed);
        }

        let reportCreated = message.createdAt.toString().split(' ');
        let reportCreatedAt = reportCreated[2] + ' ' + reportCreated[1] + ", " + reportCreated[3];
        let reportEmbed = new Discord.RichEmbed()
            .setThumbnail(rUser.displayAvatarURL)
            .setDescription("–ñ–∞–ª–æ–±–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            .setColor(embedColor)
            .addField("–ù–∏–∫ ", rUser, true)
            .addField("ID ", + rUser.id, true)
            .addField("–ü–æ–∂–∞–ª–æ–≤–∞–ª—Å—è ", sender, true)
            .addField("–í—Ä–µ–º—è: ", reportCreatedAt, true)
            .addField("–ü—Ä–∏—á–∏–Ω–∞", rReason, true)
            .setFooter(version, sender.displayAvatarURL)

        let reportEmbedText = new Discord.RichEmbed()
            .setThumbnail(rUser.displayAvatarURL)
            .setDescription(":white_check_mark: –ñ–∞–ª–æ–±–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
            .setColor(embedColor)
            .addField("–ù–∏–∫ ", rUser, true)
            .addField("–ü—Ä–∏—á–∏–Ω–∞", rReason, true)
            .setFooter(version, sender.displayAvatarURL)

        if (!logChannel)
            return message.channel.send("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è —Ä–µ–ø–æ—Ä—Ç–æ–≤")

        message.delete().catch(O_o => { });
        message.guild.channels.find('name', "log").send(reportEmbed);

        message.author.send(reportEmbedText);
        return;
    }
})
